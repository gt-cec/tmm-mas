// generated from rosidl_adapter/resource/srv.idl.em
// with input from ltl_automaton_msgs/srv/TrapCheck.srv
// generated code does not contain a copyright notice

#include "ltl_automaton_msgs/msg/TransitionSystemState.idl"

module ltl_automaton_msgs {
  module srv {
    @verbatim (language="comment", text=
      "Service message for trap checking in a LTL automaton")
    struct TrapCheck_Request {
      @verbatim (language="comment", text=
        "Transition system state to be tested for trap")
      ltl_automaton_msgs::msg::TransitionSystemState ts_state;
    };
    struct TrapCheck_Response {
      @verbatim (language="comment", text=
        "Returns false if state is not connected to agent current" "\n"
        "state and therefor cannot be tested for trap")
      boolean is_connected;

      @verbatim (language="comment", text=
        "Returns true if check state is a trap, false otherwises")
      boolean is_trap;
    };
  };
};
